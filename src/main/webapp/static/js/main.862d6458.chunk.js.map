{"version":3,"sources":["ComicStack.png","services/UserService.js","components/Header.js","components/SearchResultCard.js","services/SearchService.js","components/SearchResults.js","components/RelatedCover.js","services/ReviewService.js","components/IssueReview.js","components/DetailsLoading.js","components/IssueNewReview.js","services/ComicBookService.js","components/Issue.js","components/HomeCover.js","components/CoverReview.js","components/RecentReviews.js","components/HomeLoading.js","components/Home.js","components/Login.js","components/Register.js","components/ProfileCover.js","components/ProfileReview.js","components/AdminRow.js","services/HistoryService.js","components/Profile.js","components/CollectionCover.js","components/Collection.js","components/Review.js","components/Reviews.js","components/CharacterRelatedCover.js","components/Character.js","components/PublicProfile.js","components/ComicStack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","server","user","fetch","method","body","JSON","stringify","headers","then","response","json","userId","username","password","res","text","length","parse","Header","state","searchString","menuDown","updateSearchString","newString","setState","prevState","userService","this","props","prevProps","snapshot","imageChange","event","key","history","push","className","to","src","require","alt","type","placeholder","onChange","target","value","onKeyPress","keyPressed","id","pictureURL","onClick","logoutUser","React","Component","withRouter","SearchResultCard","issue","image","super_url","name","volume","issue_number","cover_date","keys","proxy","searchApi","issueApi","issuesApi","characterApi","content","page","amountPerPage","date","Date","begin","setFullYear","getFullYear","end","toISOString","substring","current_date","getMilliseconds","SearchResults","issues","pageCount","search","SearchService","match","params","query","pageInfo","Math","min","floor","number_of_total_results","limit","results","map","RelatedCover","review","reviewId","issueId","IssueReview","elements","i","stars","console","log","mode","reviewService","updateReviews","title","DetailsLoadingIndicator","IssueNewReview","starCount","addReview","coverImageURL","timestamp","closeReview","alert","rows","maxLength","comicBook","comicBookId","sortBy","resource","Issue","add","related","reviews","loaded","grade","signatures","reload","UserService","ReviewService","nextIssue","prevIssue","displayList","character","character_credits","displayListTooltip","updateGrade","updateSignatures","reloadReviews","addIssueToCollection","ComicBookService","coverDate","characters","join","window","scrollTo","top","behavior","DetailsLoading","round","toFixed","selected","store_date","description","replace","attribs","children","href","createElement","domToReact","role","HomeCover","CoverReview","RecentReviews","LoadingIndicator","Home","updateUsername","updatePassword","login","loginUser","align","Login","Register","passwordVerify","updatePasswordVerify","addUser","startDate","ProfileCover","ProfileReview","AdminRow","updateRole","updateUser","currentUser","deleteUser","Profile","picture","userHistory","allUsers","collection","level","first","last","email","dob","address","city","zip","bio","updateFirst","updateLast","updateEmail","updateDOB","updateAddress","updateCity","updateState","updateZip","updateBio","calcLevel","adminUpdateUser","users","historyService","list","comicBookService","comicBooks","URL","createObjectURL","files","readOnly","maxlength","row","action","CollectionCover","hover","onMouseEnter","onMouseLeave","deleteComicBook","Collection","searchBy","searching","updateSortBy","updateSearchBy","Review","Reviews","CharacterRelatedCover","Character","character_enemies","real_name","birth","publisher","first_appeared_in_issue","count_of_issue_appearances","PublicProfile","ComicStack","path","exact","render","component","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.862d6458.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ComicStack.651f7d97.png\";","\nconst server = \"https://comicstack.herokuapp.com/api\";\n\nconst createUser = (user) =>\n    fetch(server + \"/users\", {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst updateUser = (userId, user) =>\n    fetch(server + \"/users/\" + userId, {\n        method: 'PUT',\n        body: JSON.stringify(user),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst deleteUser = (userId) =>\n    fetch(server + \"/users/\" + userId, {\n        method: 'DELETE'\n    })\n\nconst findUserById = (userId) =>\n    fetch(server + \"/users/\" + userId)\n        .then(response => response? response.json(): {})\n\nconst findAllUsers = () =>\n    fetch(server + \"/users\")\n        .then(response => response.json())\n\nconst findIdFromLogin = (username, password) =>\n    fetch(server + \"/users/login/\" + username + \"/\" + password)\n        .then((res) => res.text())\n        .then((text) => text.length ? JSON.parse(text) : {})\n\nexport default {\n    createUser,\n    updateUser,\n    deleteUser,\n    findUserById,\n    findAllUsers,\n    findIdFromLogin\n}","import React from 'react'\nimport {Link, withRouter} from \"react-router-dom\";\nimport userService from \"../services/UserService\";\n\nclass Header extends React.Component {\n    state = {\n        searchString: '',\n        menuDown: false,\n        user: {}\n    }\n\n    componentDidMount() {\n        userService.findUserById(this.props.userId)\n            .then(user => {\n                this.setState({\n                    user: user\n                })\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.userId !== this.props.userId || prevProps.imageChange !== this.props.imageChange) {\n            userService.findUserById(this.props.userId)\n                .then(user => {\n                    this.setState({\n                        user: user\n                    })\n                })\n        }\n    }\n\n    updateSearchString = (newString) =>\n        this.setState(prevState => ({\n            searchString: newString\n        }))\n\n    keyPressed(event) {\n        if(event.key == 'Enter') {\n            this.props.history.push(`/search/${this.state.searchString}`)\n        }\n    }\n\n    render() {\n        return (\n            <span className=\"fixed-top\">\n                <div className=\"wbdv-long-blank\"/>\n                <div className=\"wbdv-long-bar\">\n                    <div className=\"row wbdv-top-bar-height\">\n                        <div className=\"col-3 wbdv-top-bar-height\">\n                            <Link to={`/`}>\n                                <img className=\"d-lg-none wbdv-small_logo align-middle\"\n                                     src={require('../ComicStack.png')}\n                                     alt=\"Card image cap\"/>\n                                <div className=\"d-none d-lg-block wbdv-logo-section\">\n                                    <img className=\"wbdv-logo align-middle\"\n                                         src={require('../ComicStack.png')}\n                                         alt=\"Card image cap\"/>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-7 col-md-6 wbdv-top-bar-height\">\n                            <div className=\"input-group wbdv-search-group\">\n                                <input type=\"text\" className=\"form-control wbdv-search-bar\"\n                                       placeholder=\"Search\"\n                                       onChange={(event) => this.updateSearchString(\n                                           event.target.value)}\n                                       onKeyPress={this.keyPressed}\n                                       value={this.state.searchString}/>\n                                <div className=\"input-group-append\">\n                                    <Link to={`/search/${this.state.searchString}`}>\n                                        <span\n                                            className=\"btn input-group-text wbdv-search-button\"\n                                            id=\"basic-addon1\">\n                                            <i className=\"fa fa-search fa-lg wbdv-search-icon\"></i>\n                                        </span>\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-2 col-md-3 wbdv-top-bar-height wbdv-top-text\">\n                            {\n                                !this.props.userId &&\n                                <Link to={`/login`} className=\"float-right\">\n                                    <div\n                                        className=\"d-none d-md-block wbdv-loginregister-text wbdv-no-link\">\n                                        Login/Register\n                                    </div>\n                                    <div\n                                        className=\"d-md-none wbdv-loginregister-text-sm wbdv-no-link\">\n                                        Login/<br/>Register\n                                    </div>\n                                </Link>\n                            }\n                            {\n                                this.props.userId &&\n                                <span>\n                                    <div\n                                        className=\"d-none d-md-block wbdv-profile-text wbdv-no-link\">\n                                        {this.state.user.username}\n                                    </div>\n                                    <img className=\"btn wbdv-profile-img\"\n                                         src={this.state.user.pictureURL}\n                                         onClick={() => this.setState(\n                                             {menuDown: !this.state.menuDown})}/>\n                                </span>\n                            }\n                            {\n                                this.state.menuDown &&\n                                <div className=\"wbdv-header-dropdown\" onClick={() => this.setState({\n                                        menuDown: false\n                                    })}>\n                                    <ul className=\"wbdv-header-dropdown-list\">\n                                        <li className=\"list-group-item wbdv-header-dropdown-item\">\n                                            <Link className=\"wbdv-no-link\" to={`/profile`}>\n                                                Profile\n                                            </Link>\n                                        </li>\n                                        <li className=\"list-group-item wbdv-header-dropdown-item\">\n                                            <Link className=\"wbdv-no-link\" to={`/collection&sortby=grade`}>\n                                                Collection\n                                            </Link>\n                                        </li>\n                                        <li className=\"list-group-item wbdv-header-dropdown-item\">\n                                            <Link className=\"wbdv-no-link\" to={`/reviews`}>\n                                                Reviews\n                                            </Link>\n                                        </li>\n                                        <li className=\"list-group-item wbdv-header-dropdown-item\">\n                                            <Link className=\"wbdv-no-link\" to={`/`}\n                                                onClick={() => this.props.logoutUser()}>\n                                                Logout\n                                            </Link>\n                                        </li>\n                                    </ul>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default withRouter(Header)","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass SearchResultCard extends React.Component {\n    render() {\n        return (\n            <div className=\"col mb-4\">\n                <Link to={`/details/issue/${this.props.issue.id}`}>\n                <div className=\"card\">\n                    <img className=\"card-img-top wbdv-card-img\" src={this.props.issue.image.super_url}\n                         alt=\"Card image cap\"/>\n                    <div className=\"row card-body font-weight-bold text-truncate\">\n                        {this.props.issue.name !== null ?\n                         this.props.issue.name :\n                        this.props.issue.volume.name + \" #\" + this.props.issue.issue_number}\n                        <div className=\"card-date text-right\">\n                            {this.props.issue.cover_date}\n                        </div>\n                    </div>\n                </div>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default SearchResultCard","\nconst keys = [\"609b66edd3d828492cadbe8b2cc825f2d712aaef\", \"971f0a256125594e6f379a72403456bfcc63ea88\",\n              \"d4535690785075fdbe9edf27e73d8f2d6092a74f\"];\n\nconst proxy = \"https://cv-proxy.herokuapp.com/\"\n\nvar searchApi = 0;\nvar issueApi = 0;\nvar issuesApi = 0;\nvar characterApi = 0;\n\nconst search = (content, page, amountPerPage) => {\n    searchApi = (searchApi + 1) % keys.length;\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/\" +\n                 \"search/?api_key=\" + keys[searchApi] + \"&sortBy=name:asc\" +\n                 \"&resources=issue&format=json&limit=\" + amountPerPage + \"&page=\" + page + \"&query=\" + content)\n        .then(response => response.json())}\n\nconst findIssueById = (id) => {\n    issueApi = (issueApi + 1) % keys.length;\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/issue/4000-\" +\n            id + \"/?api_key=\" + keys[issueApi] + \"&format=json\")\n        .then(response => response.json())}\n\nconst findCharacterById = (id) => {\n    characterApi = (characterApi + 1) % keys.length;\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/character/4005-\" +\n                 id + \"/?api_key=\" + keys[characterApi] + \"&format=json\")\n        .then(response => response.json())}\n\nconst findRelatedIssues = (issue) => {\n    issuesApi = (issuesApi + 1) % keys.length;\n    var json = JSON.parse(JSON.stringify(issue.cover_date))\n    var date = new Date(json);\n    var begin = new Date(json);\n        begin.setFullYear(date.getFullYear() - 1);\n    var end = new Date(json);\n        end.setFullYear(date.getFullYear() + 1);\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/issues/\" +\n                 \"?api_key=\" + keys[issuesApi] + \"&format=json&limit=5&filter=volume:\" +\n                 issue.volume.id + \",cover_date:\" + begin.toISOString().substring(0, 10) + \"|\" +\n                 end.toISOString().substring(0, 10))\n        .then(response => response.json())}\n\nconst findNextIssue = (issue) => {\n    issuesApi = (issuesApi + 1) % keys.length;\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/issues/\" +\n                 \"?api_key=\" + keys[issuesApi] + \"&format=json&limit=1&filter=volume:\" +\n                 issue.volume.id + \",issue_number:\" + (JSON.parse(issue.issue_number) + 1))\n        .then(response => response.json())}\n\nconst findPrevIssue = (issue) => {\n    issuesApi = (issuesApi + 1) % keys.length;\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/issues/\" +\n                 \"?api_key=\" + keys[issuesApi] + \"&format=json&limit=1&filter=volume:\" +\n                 issue.volume.id + \",issue_number:\" + (issue.issue_number - 1))\n        .then(response => response.json())}\n\nconst randomComics = () => {\n    issuesApi = (issuesApi + 1) % keys.length;\n    var current_date = new Date();\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/issues/\" +\n                 \"?api_key=\" + keys[issuesApi] + \"&format=json&limit=5&offset=\" +\n                 current_date.getMilliseconds() + \"&filter=cover_date:1938-06-30|1941-06-06\", {headers: { 'Content-Type': 'application/json' }})\n            .then(response => response.json())}\n\nconst characterRelated = (content) => {\n    searchApi = (searchApi + 1) % keys.length;\n    return fetch(proxy + \"https://comicvine.gamespot.com/api/\" +\n                 \"search/?api_key=\" + keys[searchApi] + \"&sortBy=name:asc\" +\n                 \"&resources=issue&format=json&limit=12&query=\" + content)\n        .then(response => response.json())}\n\nexport default {\n    search,\n    findIssueById,\n    findCharacterById,\n    findRelatedIssues,\n    findNextIssue,\n    findPrevIssue,\n    randomComics,\n    characterRelated\n}","import React from 'react'\nimport SearchResultCard from \"./SearchResultCard\";\nimport SearchService from \"../services/SearchService\";\n\nclass SearchResults extends React.Component {\n    state = {\n        issues: [],\n        page: 1,\n        pageCount: 1,\n    }\n\n    componentDidMount() {\n        this.search(this.state.page)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.match.params.query !== this.props.match.params.query) {\n            this.search(1)\n        }\n    }\n\n    search = (page) =>\n        SearchService.search(this.props.match.params.query, page, 12)\n            .then(pageInfo =>\n                      this.setState({\n                                        page: page,\n                                        pageCount: Math.min(Math.floor(\n                                            pageInfo.number_of_total_results / pageInfo.limit),\n                                                833),\n                                        issues: pageInfo.results\n                                    }))\n\n    render() {\n        return (\n            <div className=\"wbdv-search-area\">\n                <div className=\"row wbdv-search-area-top\">\n                    <div className=\"col-6 font-weight-bold\">\n                        Search Results\n                    </div>\n                    <div className=\"col-6 text-right font-weight-bold\">\n                        Page {this.state.page}\n                    </div>\n                </div>\n                <div className=\"row row-cols-2 row-cols-sm-2 row-cols-md-3 row-cols-lg-4\">\n                    {\n                        this.state.issues.map(issue =>\n                             <SearchResultCard\n                                 id={issue.id}\n                                issue={issue}/>)\n                    }\n                </div>\n                <div className=\"wbdv-search-bottom-buttons\">\n                    {\n                        this.state.page > 2 &&\n                        <div\n                            className=\"btn wbdv-page-btn font-weight-bold\"\n                            onClick={() => this.search(1)}>\n                            1\n                        </div>\n                    }\n                    {\n                        this.state.page > 3 &&\n                        <span className=\"font-weight-bold\">\n                            ...\n                        </span>\n                    }\n                    {\n                        this.state.page > 1 &&\n                        <div className=\"btn wbdv-page-btn font-weight-bold\"\n                             onClick={() => this.search(this.state.page - 1)}>\n                            {this.state.page - 1}\n                        </div>\n                    }\n                    <div className=\"btn wbdv-page-btn wbdv-current-page font-weight-bold\">\n                        {this.state.page}\n                    </div>\n                    {\n                        this.state.page < this.state.pageCount &&\n                        <div className=\"btn wbdv-page-btn font-weight-bold\"\n                             onClick={() => this.search(this.state.page + 1)}>\n                            {this.state.page + 1}\n                        </div>\n                    }\n                    {\n                        this.state.page < this.state.pageCount - 2 &&\n                        <span className=\"font-weight-bold\">\n                            ...\n                        </span>\n                    }\n                    {\n                        this.state.page < this.state.pageCount - 1 &&\n                        <div className=\"btn wbdv-page-btn font-weight-bold\"\n                             onClick={() => this.search(this.state.pageCount)}>\n                            {this.state.pageCount}\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchResults","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass RelatedCover extends React.Component {\n    render() {\n        return (\n            <div className=\"col wbdv-related-cover-col\">\n                <Link to={`/details/issue/${this.props.issue.id}`}>\n                    <img className=\"wbdv-related-cover\" src={this.props.issue.image.super_url}\n                        alt=\"Card image cap\"/>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default RelatedCover;","\nconst server = \"https://comicstack.herokuapp.com/api\";\n\nconst createReview = (review) =>\n    fetch(server + \"/reviews\", {\n        method: 'POST',\n        body: JSON.stringify(review),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst deleteReview = (reviewId) =>\n    fetch(server + \"/reviews/\" + reviewId, {\n        method: 'DELETE'\n    })\n\nconst findAllReviews = () =>\n    fetch(server + \"/reviews\")\n        .then(response => response.json())\n\nconst findReviewById = (reviewId) =>\n    fetch(server + \"/reviews/\" + reviewId)\n        .then(response => response.json())\n\nconst findReviewsForUser = (userId) =>\n    fetch(server + \"/users/\" + userId + \"/reviews\")\n        .then(response => response.json())\n\nconst findReviewsForIssue = (issueId) =>\n    fetch(server + \"/issues/\" + issueId + \"/reviews\")\n        .then(response => response.json())\n\nconst findRecentReviews = () =>\n    fetch(server + \"/reviews/recent\")\n        .then(response => response.json())\n\nexport default {\n    createReview,\n    deleteReview,\n    findAllReviews,\n    findReviewById,\n    findReviewsForUser,\n    findReviewsForIssue,\n    findRecentReviews\n}","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport reviewService from \"../services/ReviewService\";\n\nclass IssueReview extends React.Component {\n    render() {\n        let elements=[];\n        for (let i = 0; i < 5; i++) {\n            i < this.props.review.stars?\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-filled\"/>):\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-blank\"/>);\n        }\n        console.log(this.props.mode);\n        return (\n            <li className=\"list-group-item wbdv-review\">\n                {\n                    (this.props.mode == \"admin\" || this.props.userId == this.props.review.userId) &&\n                    <div className=\"btn wbdv-delete-review\"\n                        onClick={() => {\n                            reviewService.deleteReview(this.props.review.id)\n                                .then(() => this.props.updateReviews());\n                        }}>\n                        <i className=\"fa fa-trash\"/>\n                    </div>\n                }\n                <div className=\"row wbdv-review-row\">\n                    <div className=\"col-5 wbdv-review-user\">\n                        <Link to={`/user/${this.props.review.userId}`}>\n                            <span className=\"wbdv-review-name-color\">\n                                {this.props.review.username}\n                            </span>\n                        </Link>\n                    </div>\n                    <div className=\"col-7 wbdv-review-top-col\">\n                        <span className=\"float-right\">\n                            {elements}\n                        </span>\n                    </div>\n                </div>\n                <div className=\"wbdv-review-text\"\n                     title={this.props.review.text}>\n                    {this.props.review.text}\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default IssueReview;","import React from \"react\";\n\n\nconst DetailsLoadingIndicator = (props) => {\n    return (\n        <div className=\"wbdv-loading\">\n            <img className=\"wbdv-loading-logo align-middle\"\n                 src={\"https://cdn.dribbble.com/users/2374064/screenshots/4728503/superman.gif\"}\n                 alt=\"Card image cap\"/>\n        </div>\n    );\n}\n\nexport default DetailsLoadingIndicator;","import React from 'react'\nimport reviewService from \"../services/ReviewService\";\n\nclass IssueNewReview extends React.Component {\n    state = {\n        text: '',\n        starCount: 1\n    }\n\n    addReview = () =>\n        reviewService.createReview({\n            issueId: this.props.issue.id,\n            userId: this.props.user.id,\n            username: this.props.user.username,\n            stars: this.state.starCount,\n            text: this.state.text,\n            coverImageURL: this.props.issue.image.super_url,\n            timestamp: (new Date()).toISOString()\n        }).then(() => {\n            this.props.closeReview();\n            this.setState({\n                text: '',\n                starCount: 1\n            })\n        })\n\n    render() {\n        let elements=[];\n        for (let i = 0; i < 5; i++) {\n            i < this.state.starCount?\n            elements.push(\n                <i className=\"fa fa-star wbdv-review-star wbdv-review-star-filled wbdv-review-star-hover\"\n                    onClick={() => this.setState({\n                        starCount: i + 1\n                    })}/>):\n            elements.push(\n                <i className=\"fa fa-star wbdv-review-star wbdv-review-star-blank wbdv-review-star-hover\"\n                    onClick={() => this.setState({\n                        starCount: i + 1\n                    })}/>);\n        }\n        return (\n            <li className=\"list-group-item wbdv-review\">\n                {\n                    this.props.mode == 'admin' &&\n                    <div className=\"btn wbdv-delete-review\"\n                         onClick={() => alert(\"Will remove review\")}>\n                        <i className=\"fa fa-trash\"/>\n                    </div>\n                }\n                <div className=\"row wbdv-review-row\">\n                    <div className=\"col-5 wbdv-review-user\">\n                        <span className=\"wbdv-review-name-color\">\n                            {this.props.user.username}\n                        </span>\n                    </div>\n                    <div className=\"col-7 wbdv-review-top-col\">\n                        <span className=\"float-right\">\n                            {elements}\n                        </span>\n                    </div>\n                </div>\n                <textarea\n                    rows=\"4\"\n                    maxLength=\"200\"\n                    className=\"form-control wbdv-review-textarea\"\n                    placeholder=\"Review here\"\n                    onChange={(event) => this.setState({\n                        text: event.target.value\n                    })}/>\n                <div className=\"btn wbdv-review-post\"\n                     onClick={() => this.addReview()}>\n                    Post Review\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default IssueNewReview;","\nconst server = \"https://comicstack.herokuapp.com/api\";\n\nconst createComicBook = (comicBook) =>\n    fetch(server + \"/comic-books\", {\n        method: 'POST',\n        body: JSON.stringify(comicBook),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst updateComicBook = (comicBookId, comicBook) =>\n    fetch(server + \"/comic-books/\" + comicBookId, {\n        method: 'PUT',\n        body: JSON.stringify(comicBook),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst deleteComicBook = (comicBookId) =>\n    fetch(server + \"/comic-books/\" + comicBookId, {\n        method: 'DELETE'\n    })\n\nconst findComicBookById = (comicBookId) =>\n    fetch(server + \"/comic-books/\" + comicBookId)\n        .then(response => response.json())\n\nconst findComicBooksForUser = (userId) =>\n    fetch(server + \"/users/\" + userId + \"/collection\")\n        .then(response => response.json())\n\nconst findComicBooksForUserSorted = (userId, sortBy) =>\n    fetch(server + \"/users/\" + userId + \"/collection?sort=\" + sortBy)\n        .then(response => response.json())\n\nconst findComicBooksForUserSortedSearch = (userId, sortBy, resource, query) =>\n    fetch(server + \"/users/\" + userId + \"/collection?sort=\" + sortBy + \"&resource=\" + resource + \"&query=\" + query)\n        .then(response => response.json())\n\nexport default {\n    createComicBook,\n    updateComicBook,\n    deleteComicBook,\n    findComicBookById,\n    findComicBooksForUser,\n    findComicBooksForUserSorted,\n    findComicBooksForUserSortedSearch\n}","import React, {Fragment} from 'react'\nimport SearchService from \"../services/SearchService\";\nimport parse, {domToReact} from 'html-react-parser';\nimport RelatedCover from \"./RelatedCover\";\nimport IssueReview from \"./IssueReview\";\nimport {Link} from \"react-router-dom\";\nimport DetailsLoadingIndicator from \"./DetailsLoading\";\nimport IssueNewReview from \"./IssueNewReview\";\nimport ComicBookService from \"../services/ComicBookService\";\nimport UserService from \"../services/UserService\";\nimport ReviewService from \"../services/ReviewService\";\n\nclass Issue extends React.Component {\n    state = {\n        issue: null,\n        add: false,\n        related: [],\n        reviews: [],\n        loaded: false,\n        addReview: false,\n        grade: 10.0,\n        signatures: '',\n        user: null\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            window.scrollTo({top: 0, behavior: \"smooth\"});\n            this.setState({\n                loaded: false\n            });\n            this.reload();\n        }\n    }\n\n    reload = () =>\n        SearchService.findIssueById(this.props.match.params.id)\n            .then(issue => issue.results)\n            .then(issue => {\n                this.setState({\n                                  issue: issue\n                              });\n                SearchService.findRelatedIssues(issue)\n                    .then(issues => {\n                        this.setState({\n                                          related: issues.results,\n                                          loaded: true\n                                      })\n                    });\n                UserService.findUserById(this.props.userId)\n                    .then(user =>\n                        this.setState({\n                            user: user\n                        }))\n                ReviewService.findReviewsForIssue(this.props.match.params.id)\n                    .then(reviews => {\n                        this.setState({\n                            reviews: reviews\n                        })\n                    });\n            })\n\n    nextIssue = () =>\n        SearchService.findNextIssue(this.state.issue)\n            .then(issue => issue.results)\n            .then(results =>\n                      results[0] ?\n                      this.props.history.push(`/details/issue/${results[0].id}`) :\n                      alert(\"This is the last issue in the volume\")\n            )\n\n    prevIssue = () =>\n        SearchService.findPrevIssue(this.state.issue)\n            .then(issue => issue.results)\n            .then(results =>\n                      results[0] ?\n                      this.props.history.push(`/details/issue/${results[0].id}`) :\n                      alert(\"This is the first issue in the volume\")\n            )\n\n    displayList = (character, i) => {\n        return (\n            <span>\n                <Link to={`/details/character/${character.id}`} className={\"wbdv-character-link\"}>\n                    {character.name}\n                </Link>\n                {(i < this.state.issue.character_credits.length - 1) ?\n                 \", \" : \"\"}\n            </span>\n        )\n    }\n\n    displayListTooltip = (character, i) => {\n        return \" \" + character.name;\n    }\n\n    updateGrade = (value) =>\n        this.setState(prevState => ({\n            grade: value\n        }))\n\n    updateSignatures = (value) =>\n        this.setState(prevState => ({\n            signatures: value\n        }))\n\n    reloadReviews = () =>\n        ReviewService.findReviewsForIssue(this.props.match.params.id)\n            .then(reviews => {\n                this.setState({\n                    reviews: reviews,\n                    addReview: false\n                })\n            })\n\n    addIssueToCollection = () =>\n        ComicBookService.createComicBook({\n            issueId: this.state.issue.id,\n            userId: this.props.userId,\n            grade: this.state.grade,\n            signatures: this.state.signatures,\n            coverImageURL: this.state.issue.image.super_url,\n            coverDate: this.state.issue.cover_date,\n            timestamp: (new Date()).toISOString(),\n            title: this.state.issue.name ?\n                   this.state.issue.name :\n                   this.state.issue.volume.name + \" #\" + this.state.issue.issue_number,\n            volume: this.state.issue.volume.name,\n            characters: this.state.issue.character_credits.map(this.displayListTooltip).join(\"\")\n        })\n            .then(() => {\n                this.setState({\n                    add: false\n                })})\n\n    render() {\n        if (!this.state.issue || !this.state.loaded) {\n            return (\n                <div className=\"row\">\n                    <DetailsLoadingIndicator/>\n                </div>\n            )\n        }\n        let elements = [];\n        for (let i = 9.8; i >= 0; (i <= 9.2 ? i -= 0.5 : i -= 0.2)) {\n            elements.push(<option value={i}>{(Math.round(i * 10) / 10).toFixed(1)}</option>);\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-lg-8\">\n                    <div className=\"wbdv-issue-info\">\n                            <span className=\"row\">\n                                <div className=\"col-lg-5\">\n                                    <img className=\"wbdv-issue-cover\"\n                                         src={this.state.issue.image.super_url}\n                                         alt=\"Card image cap\"/>\n                                </div>\n                                <span className=\"col-lg-7 wbdv-basic-top-outer\">\n                                    <span className=\"row wbdv-top-area\">\n                                        <span className=\"col-6 wbdv-top-area-col\">\n                                            <button className=\"btn wbdv-arrow-btn\"\n                                                    onClick={() => this.prevIssue()}>\n                                                <i className=\"fa fa-arrow-left\"/>\n                                            </button>\n                                            <button className=\"btn wbdv-arrow-btn\"\n                                                    onClick={() => this.nextIssue()}>\n                                                <i className=\"fa fa-arrow-right\"/>\n                                            </button>\n                                        </span>\n                                        <span className=\"col-6 wbdv-top-area-col\">\n                                            <button className=\"btn wbdv-add-btn float-right\"\n                                                    onClick={() => this.props.userId?\n                                                                   this.setState({\n                                                                       add: !this.state.add\n                                                                   }):\n                                                                   alert(\"Must be logged in to add this issue\")}>\n                                                + Add\n                                            </button>\n                                            {\n                                                this.state.add &&\n                                                <div className=\"wbdv-add-box font-weight-bold\">\n                                                    Grade\n                                                    <select\n                                                        className=\"custom-select wbdv-grade-dropdown\"\n                                                        value={this.state.grade}\n                                                        onChange={(event) => this.updateGrade(\n                                                            event.target.value)}>\n                                                        <option selected>10.0</option>\n                                                        {elements}\n                                                    </select>\n                                                    Signature(s)\n                                                    <input type=\"text\"\n                                                           className=\"form-control wbdv-signature-field\"\n                                                           placeholder=\"ex. Stan Lee\"\n                                                           value={this.state.signatures}\n                                                           onChange={(event) => this.updateSignatures(\n                                                               event.target.value)}/>\n                                                    <button className=\"btn wbdv-add-done-btn\"\n                                                            onClick={() => this.addIssueToCollection()}>\n                                                        Done\n                                                    </button>\n                                                </div>\n                                            }\n                                        </span>\n                                    </span>\n                                    <div className=\"wbdv-top-spacer\"/>\n                                    <div className=\"wbdv-top-info\">\n                                        <div className=\"row wbdv-info-row\"\n                                             title={this.state.issue.name ?\n                                                    this.state.issue.name :\n                                                    this.state.issue.volume.name + \" #\"\n                                                    + this.state.issue.issue_number}>\n                                            <div\n                                                className=\"col-3 wbdv-info-row-column font-weight-bold\">\n                                                Name:\n                                            </div>\n                                            <div\n                                                className=\"col-9 wbdv-info-row-column text-right text-truncate\">\n                                                {this.state.issue.name ?\n                                                 this.state.issue.name :\n                                                 this.state.issue.volume.name + \" #\"\n                                                 + this.state.issue.issue_number}\n                                            </div>\n                                        </div>\n                                        <div className=\"row wbdv-info-row\">\n                                            <div\n                                                className=\"col-4 wbdv-info-row-column font-weight-bold\">\n                                                Volume:\n                                            </div>\n                                            <div\n                                                className=\"col-8 wbdv-info-row-column text-right text-truncate\">\n                                                {this.state.issue.volume.name}\n                                            </div>\n                                        </div>\n                                        <div className=\"row wbdv-info-row\">\n                                            <div\n                                                className=\"col-4 wbdv-info-row-column font-weight-bold\">\n                                                Issue:\n                                            </div>\n                                            <div\n                                                className=\"col-8 wbdv-info-row-column text-right text-truncate\">\n                                                {this.state.issue.issue_number}\n                                            </div>\n                                        </div>\n                                        <div className=\"row wbdv-info-row\">\n                                            <div\n                                                className=\"col-6 wbdv-info-row-column font-weight-bold\">\n                                                Cover Date:\n                                            </div>\n                                            <div\n                                                className=\"col-6 wbdv-info-row-column text-right text-truncate\">\n                                                {this.state.issue.cover_date}\n                                            </div>\n                                        </div>\n                                        <div className=\"row wbdv-info-row\">\n                                            <div\n                                                className=\"col-6 wbdv-info-row-column font-weight-bold\">\n                                                In Store Date:\n                                            </div>\n                                            <div\n                                                className=\"col-6 wbdv-info-row-column text-right text-truncate\">\n                                                 {this.state.issue.store_date ?\n                                                  this.state.issue.store_date :\n                                                  \"N/A\"}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"wbdv-top-spacer\"/>\n                                    <div className=\"wbdv-top-chars\"\n                                         title={this.state.issue.character_credits.map(\n                                             this.displayListTooltip)}>\n                                        <div\n                                            className=\"font-weight-bold wbdv-section-title\">Characters</div>\n                                        {this.state.issue.character_credits.map(this.displayList)}\n                                    </div>\n                                </span>\n                            </span>\n                        <div className=\"wbdv-issue-description\">\n                            <div className=\"font-weight-bold wbdv-section-title\">Description</div>\n                            {this.state.issue.description ?\n                             parse(this.state.issue.description, {\n                                 replace: ({attribs, children}) => {\n                                     if (!attribs) {\n                                         return;\n                                     }\n                                     if (attribs.href) {\n                                         return React.createElement('a', {}, domToReact(children,))\n                                     }\n                                 }\n                             }) :\n                             \"N/A\"}\n                        </div>\n                        <div className=\"wbdv-issue-related-header\">\n                            Related Issues\n                        </div>\n                        <div className=\"row row-cols-5 wbdv-cover-row\">\n                            {\n                                this.state.related.map(issue =>\n                                                           <RelatedCover\n                                                               id={issue.id}\n                                                               issue={issue}/>)\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-4\">\n                    <div className=\"wbdv-issue-reviews\">\n                            <span className=\"row\">\n                                <div className=\"col-10\">\n                                    <div className=\"wbdv-review-title\">\n                                        Reviews\n                                    </div>\n                                </div>\n                                <span className=\"col-2 wbdv-review-add-col\">\n                                    <div className=\"btn wbdv-review-add\"\n                                         onClick={() => this.props.userId?\n                                                        this.setState({\n                                                            addReview: true\n                                                         }):\n                                                        alert(\"Must be logged in to write a review\")}>\n                                        <i className=\"fa fa-plus\"/>\n                                    </div>\n                                </span>\n                            </span>\n                        <ul className=\"list-group wbdv-review-list\">\n                            {\n                                this.state.addReview &&\n                                <IssueNewReview issue={this.state.issue} user={this.state.user} closeReview={this.reloadReviews}/>\n                            }\n                            {\n                                this.state.reviews.map(review =>\n                                     <IssueReview\n                                          userId={this.props.userId}\n                                          review={review}\n                                          mode={this.state.user.role}\n                                          updateReviews={this.reloadReviews}/>)\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Issue","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass HomeCover extends React.Component {\n    render() {\n        return (\n            <div className=\"col wbdv-home-cover-col\">\n                <Link to={`/details/issue/${this.props.issue.id}`}>\n                    <img className=\"wbdv-related-cover\" src={this.props.issue.image.super_url}\n                         alt=\"Card image cap\"/>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default HomeCover;","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass CoverReview extends React.Component {\n    render() {\n        let elements=[];\n        for (let i = 0; i < 5; i++) {\n            i < this.props.review.stars?\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-filled\"/>):\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-blank\"/>);\n        }\n        return (\n            <div className=\"col-md-6\">\n                <Link to={`/details/issue/${this.props.review.issueId}`}>\n                    <li className=\"list-group-item wbdv-review\">\n                        <span className=\"row wbdv-review-row\">\n                            <div className=\"col-3 wbdv-covered-review-cover-col\">\n                                <img className=\"btn wbdv-covered-review-cover\" src={this.props.review.coverImageURL}\n                                     alt=\"Card image cap\"/>\n                            </div>\n                            <div className=\"col-9 wbdv-covered-review-text-col\">\n                            <div className=\"row wbdv-review-row\">\n                                <div className=\"col-5 wbdv-review-user text-truncate\">\n                                    {this.props.review.username}\n                                </div>\n                                <div className=\"col-7 wbdv-review-top-col\">\n                                    <span className=\"float-right\">\n                                        {elements}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"wbdv-covered-review-message\"\n                                 title={this.props.review.text}>\n                                {this.props.review.text}\n                            </div>\n                            </div>\n                        </span>\n                    </li>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default CoverReview;","import React from 'react'\nimport CoverReview from \"./CoverReview\";\nimport ReviewService from \"../services/ReviewService\";\n\nclass RecentReviews extends React.Component {\n    state = {\n        reviews: []\n    }\n\n    componentDidMount() {\n        ReviewService.findRecentReviews()\n            .then(reviews => {\n                this.setState({\n                    reviews: reviews\n                })\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"wbdv-recent-reviews\">\n                <div className=\"wbdv-recent-reviews-header\">\n                    Recent Reviews\n                </div>\n                    <span className=\"row\">\n                        {\n                            this.state.reviews.map(review =>\n                                <CoverReview review={review}/>)\n                        }\n                    </span>\n            </div>\n        )\n    }\n}\n\nexport default RecentReviews;","import React from \"react\";\n\nconst LoadingIndicator = (props) => {\n    return (\n        <div className=\"col wbdv-home-cover-col\">\n            {console.log(\"Hit\")}\n            <div className=\"wbdv-home-loading float-right\">\n                <img className=\"wbdv-home-loading-logo align-middle\"\n                     src={\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/1556e182-139b-4789-b105-10a30b237b19/d9x1gon-f8dbfd85-3f8c-4a93-bab0-bedb7459e2dd.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMTU1NmUxODItMTM5Yi00Nzg5LWIxMDUtMTBhMzBiMjM3YjE5XC9kOXgxZ29uLWY4ZGJmZDg1LTNmOGMtNGE5My1iYWIwLWJlZGI3NDU5ZTJkZC5naWYifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.i4sABzbqCeueKllm0OVVNftDElGcl0njtdXS5BI_kwY\"}\n                     alt=\"Card image cap\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default LoadingIndicator;","import React from 'react'\nimport SearchService from \"../services/SearchService\";\nimport HomeCover from \"./HomeCover\";\nimport RecentReviews from \"./RecentReviews\";\nimport {Link} from \"react-router-dom\";\nimport LoadingIndicator from \"./HomeLoading\";\nimport userService from \"../services/UserService\";\n\nclass Home extends React.Component {\n    state = {\n        issues: [],\n        loaded: false,\n        username: '',\n        password: '',\n        user: {}\n    }\n\n    componentDidMount() {\n        SearchService.randomComics()\n            .then(pageInfo =>\n                this.setState({\n                    issues: pageInfo.results,\n                    loaded: true\n                }));\n        userService.findUserById(this.props.userId)\n            .then(user => {\n                this.setState({\n                    user: user\n                })\n            })\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.userId !== this.props.userId) {\n            window.scrollTo({top: 0, behavior: \"smooth\"});\n            userService.findUserById(this.props.userId)\n                .then(user => {\n                    this.setState({\n                        user: user\n                    })\n                })\n        }\n    }\n\n    updateUsername = (newString) =>\n        this.setState(prevState => ({\n            username: newString\n        }))\n\n    updatePassword = (newString) =>\n        this.setState(prevState => ({\n            password: newString\n        }))\n\n    login = () =>\n        userService.findIdFromLogin(this.state.username, this.state.password)\n            .then(user => this.props.loginUser(user.id))\n            .then((userId) => userId? 0: alert(\"Unknown username or password\"))\n\n    render() {\n        return (\n            <span>\n                <div className=\"wbdv-home-info\">\n                    <h3 align=\"center\">Welcome to Comic Stack!</h3>\n                    We support over <b>700,000</b> comic book issues that date back to the late 1930's! Do you have a giant personal collection of comic books from when you were younger? Become a member and track your collection today! Every comic book added to your collection can be marked with a grade and any signatures it might have. Want to learn more about your comics? Read the description and reviews provided by other users on every issue. <b>Tracking your comic books just got a whole lot easier!</b>\n                </div>\n                <span className=\"row\">\n                    <div className=\"col-md-8 wbdv-home-col\">\n                        <div className=\"wbdv-home-issues\">\n                            <div className=\"wbdv-home-issues-header\">\n                                Check out these issues!\n                            </div>\n                            {\n                                !this.state.loaded &&\n                                <div className=\"row row-cols-5 wbdv-cover-row\">\n                                    <LoadingIndicator/>\n                                    <LoadingIndicator/>\n                                    <LoadingIndicator/>\n                                    <LoadingIndicator/>\n                                    <LoadingIndicator/>\n                                </div>\n                            }\n                            {\n                                this.state.loaded &&\n                                <div className=\"row row-cols-5 wbdv-cover-row\">\n                                    {\n                                        this.state.issues.map(issue =>\n                                                                  <HomeCover\n                                                                      id={issue.id}\n                                                                      issue={issue}/>)\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 wbdv-home-col\">\n                        {\n                            !this.props.userId &&\n                             <div className=\"wbdv-home-login\" align=\"center\">\n                                 Login\n                                 <div className=\"wbdv-home-login-size font-weight-bold\" align=\"left\">\n                                     Username\n                                     <input type=\"text\"\n                                            className=\"form-control wbdv-home-login-field\"\n                                            onChange={(event) => this.updateUsername(\n                                                event.target.value)}\n                                            placeholder=\"username\"/>\n                                 </div>\n                                 <div className=\"wbdv-home-login-size font-weight-bold\" align=\"left\">\n                                     Password\n                                     <input type=\"password\"\n                                            className=\"form-control wbdv-home-login-field\"\n                                            onChange={(event) => this.updatePassword(\n                                                event.target.value)}\n                                            placeholder=\"password\"/>\n                                 </div>\n                                 <Link className=\"btn wbdv-home-login-btn\" onClick={() => this.login()}>\n                                     Login\n                                 </Link>\n                                 <span className=\"row\">\n                                    <div className=\"col-6 wbdv-home-small-login-btn\" align=\"left\"/>\n                                    <div className=\"col-6 wbdv-home-small-login-btn\" align=\"right\">\n                                        <Link to={`/register`}>\n                                            <span className=\"wbdv-small-btn-color\">\n                                                Register\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </span>\n                             </div>\n                        }\n                        {\n                            this.props.userId &&\n                            <div className=\"wbdv-home-profile\" align=\"center\">\n                                <img className=\"wbdv-home-profile-img\"\n                                     src={this.state.user.pictureURL}/>\n                                <div className=\"wbdv-home-profile-username\">\n                                    {this.state.user.username}\n                                </div>\n                                <span className=\"row\">\n                                    <div className=\"col-12 col-lg-6 wbdv-home-profile-col\">\n                                        <Link className=\"btn wbdv-home-profile-btn\" to={`/profile`}>\n                                            Profile\n                                        </Link>\n                                    </div>\n                                    <div className=\"col-12 col-lg-6 wbdv-home-profile-col\">\n                                        <Link className=\"btn wbdv-home-profile-btn\" to={`/collection&sortby=grade`}>\n                                            Collection\n                                        </Link>\n                                    </div>\n                                </span>\n                                <span className=\"row\">\n                                    <div className=\"col-12 col-lg-6 wbdv-home-profile-col\">\n                                        <Link className=\"btn wbdv-home-profile-btn\" to={`/reviews`}>\n                                            Reviews\n                                        </Link>\n                                    </div>\n                                    <div className=\"col-12 col-lg-6 wbdv-home-profile-col\">\n                                        <Link className=\"btn wbdv-home-profile-btn\"\n                                              onClick={() => this.props.logoutUser()}>\n                                            Logout\n                                        </Link>\n                                    </div>\n                                </span>\n                            </div>\n                        }\n                    </div>\n                </span>\n                <RecentReviews/>\n            </span>\n        )\n    }\n}\n\nexport default Home;","import React from 'react'\nimport RecentReviews from \"./RecentReviews\";\nimport {Link} from \"react-router-dom\";\nimport userService from \"../services/UserService\";\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: ''\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n    }\n\n    updateUsername = (newString) =>\n        this.setState(prevState => ({\n            username: newString\n        }))\n\n    updatePassword = (newString) =>\n        this.setState(prevState => ({\n            password: newString\n        }))\n\n    login = () =>\n        userService.findIdFromLogin(this.state.username, this.state.password)\n            .then(user => this.props.loginUser(user.id))\n            .then((userId) => userId? this.props.history.push(`/profile`): alert(\"Unknown username or password\"))\n\n    render() {\n        return (\n            <span>\n                <div className=\"wbdv-login-section\">\n                    <div className=\"row\">\n                        <div className=\"col-1 col-lg-3\"/>\n                        <div className=\"col-10 col-lg-6\" align=\"center\">\n                            <span className=\"wbdv-login-header\">Login</span>\n                            <div className=\"wbdv-login-group font-weight-bold\" align=\"left\">\n                                Username\n                                <input type=\"text\"\n                                       className=\"form-control wbdv-login-field\"\n                                       onChange={(event) => this.updateUsername(\n                                           event.target.value)}\n                                       placeholder=\"username\"/>\n                            </div>\n                            <div className=\"wbdv-login-group font-weight-bold\" align=\"left\">\n                                Password\n                                <input type=\"password\"\n                                       className=\"form-control wbdv-login-field\"\n                                       onChange={(event) => this.updatePassword(\n                                           event.target.value)}\n                                       placeholder=\"password\"/>\n                            </div>\n                            <Link className=\"btn wbdv-login-btn\" onClick={() => this.login()}>\n                                Login\n                            </Link>\n                            <span className=\"row\">\n                                <div className=\"col-6 wbdv-small-login-btn\" align=\"left\">\n                                    <Link>\n                                        <span className=\"wbdv-small-btn-color\">\n                                            Forgot Password?\n                                        </span>\n                                    </Link>\n                                </div>\n                                <div className=\"col-6 wbdv-small-login-btn\" align=\"right\">\n                                    <Link to={`/register`}>\n                                        <span className=\"wbdv-small-btn-color\">\n                                            Register\n                                        </span>\n                                    </Link>\n                                </div>\n                            </span>\n                        </div>\n                        <div className=\"col-1 col-lg-3\"/>\n                    </div>\n                </div>\n                <RecentReviews/>\n            </span>\n        )\n    }\n}\n\nexport default Login;","import React from 'react'\nimport RecentReviews from \"./RecentReviews\";\nimport {Link} from \"react-router-dom\";\nimport userService from \"../services/UserService\";\n\nclass Register extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        passwordVerify: ''\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n    }\n\n    updateUsername = (newString) =>\n        this.setState(prevState => ({\n            username: newString\n        }))\n\n    updatePassword = (newString) =>\n        this.setState(prevState => ({\n            password: newString\n        }))\n\n    updatePasswordVerify = (newString) =>\n        this.setState(prevState => ({\n            passwordVerify: newString\n        }))\n\n    addUser = () =>\n        userService.createUser({\n             username: this.state.username,\n             password: this.state.password,\n             role: 'collector',\n             startDate: (new Date()).toISOString().substring(0, 10)\n        })\n            .then(user => this.props.loginUser(user.id))\n            .then(() => this.props.history.push(`/profile`))\n\n    render() {\n        return (\n            <span>\n                <div className=\"wbdv-register-section\">\n                    <div className=\"row\">\n                        <div className=\"col-1 col-lg-3\"/>\n                        <div className=\"col-10 col-lg-6\" align=\"center\">\n                            <span className=\"wbdv-register-header\">Sign up</span>\n                            <div className=\"wbdv-register-group font-weight-bold\" align=\"left\">\n                                Username\n                                <input type=\"text\"\n                                       className=\"form-control wbdv-register-field\"\n                                       placeholder=\"username\"\n                                       onChange={(event) => this.updateUsername(\n                                           event.target.value)}\n                                       value={this.state.username}/>\n                            </div>\n                            <div className=\"wbdv-register-group font-weight-bold\" align=\"left\">\n                                Password\n                                <input type=\"password\"\n                                       className=\"form-control wbdv-register-field\"\n                                       placeholder=\"password\"\n                                       onChange={(event) => this.updatePassword(\n                                           event.target.value)}\n                                       value={this.state.password}/>\n                            </div>\n                            <div className=\"wbdv-register-group font-weight-bold\" align=\"left\">\n                                Verify Password\n                                <input type=\"password\"\n                                       className=\"form-control wbdv-register-field\"\n                                       placeholder=\"password\"\n                                       onChange={(event) => this.updatePasswordVerify(\n                                           event.target.value)}\n                                       value={this.state.passwordVerify}/>\n                            </div>\n                            <Link className=\"btn wbdv-register-btn\" onClick={() =>\n                                    this.state.password == this.state.passwordVerify?\n                                    this.addUser():\n                                    alert(\"Could not verify password\")}>\n                                Sign up\n                            </Link>\n                            <span className=\"row\">\n                                <div className=\"col-6\"/>\n                                <div className=\"col-6 wbdv-small-register-btn\" align=\"right\">\n                                    <Link to={`/login`}>\n                                        <span className=\"wbdv-small-btn-color\">\n                                            Login\n                                        </span>\n                                    </Link>\n                                </div>\n                            </span>\n                        </div>\n                        <div className=\"col-1 col-lg-3\"/>\n                    </div>\n                </div>\n                <RecentReviews/>\n            </span>\n        )\n    }\n}\n\nexport default Register;","import React from 'react'\n\nclass ProfileCover extends React.Component {\n    render() {\n        return (\n            <div className=\"col wbdv-profile-cover-col\">\n                <img className=\"wbdv-profile-cover\" src={this.props.comicBook.coverImageURL}\n                     alt=\"Card image cap\"/>\n            </div>\n        )\n    }\n}\n\nexport default ProfileCover;","import React from 'react'\n\nclass ProfileReview extends React.Component {\n    render() {\n        let elements=[];\n        for (let i = 0; i < 5; i++) {\n            i < this.props.review.stars?\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-filled\"/>):\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-blank\"/>);\n        }\n        return (\n            <li className=\"list-group-item wbdv-profile-review\">\n                <span className=\"row wbdv-review-row\">\n                    <div className=\"col-3 wbdv-covered-review-cover-col\">\n                        <img className=\"wbdv-covered-review-cover\" src={this.props.review.coverImageURL}\n                             alt=\"Card image cap\"/>\n                    </div>\n                    <div className=\"col-9 wbdv-covered-review-text-col\">\n                    <div className=\"wbdv-profile-review-row\">\n                        <span className=\"float-right\">\n                            {elements}\n                        </span>\n                    </div>\n                    <div className=\"wbdv-profile-review-message\">\n                        {this.props.review.text}\n                    </div>\n                    </div>\n                </span>\n            </li>\n        )\n    }\n}\n\nexport default ProfileReview;","import React from 'react'\nimport userService from \"../services/UserService\";\n\nclass AdminRow extends React.Component {\n    state = {\n        selected: false,\n        role: ''\n    }\n\n    componentDidMount() {\n        this.setState(prevState => ({\n            role: this.props.user.role\n        }));\n    }\n\n    updateRole = (value) =>\n        this.setState(prevState => ({\n            role: value\n        }))\n\n    render() {\n        return (\n            <div className=\"row wbdv-admin-entry\">\n                <div className=\"col-3 wbdv-admin-field-row\">\n                    {this.props.user.username}\n                </div>\n                <div className=\"col-3 wbdv-admin-field-row\">\n                    {this.props.user.password}\n                </div>\n                <div className=\"col-3 col-md-2 wbdv-admin-field-row\">\n                    {\n                        !this.state.selected && this.props.user.role\n                    }\n                    {\n                        this.state.selected &&\n                        <select className=\"custom-select wbdv-admin-dropdown\"\n                                value={this.state.role}\n                            onChange={(event) => this.updateRole(\n                                event.target.value)}>\n                            <option value=\"admin\">admin</option>\n                            <option value=\"collector\">collector</option>\n                        </select>\n                    }\n                </div>\n                <div className=\"col-2 d-none d-md-block wbdv-admin-field-row\">\n                    {this.props.user.id}\n                </div>\n                <div className=\"col-3 col-md-2 wbdv-admin-field-row\" align=\"right\">\n                    {\n                        this.state.selected &&\n                            <i className=\"btn fa fa-check wbdv-admin-icon\"\n                                onClick={() => {\n                                    this.setState({\n                                        selected: false\n                                    });\n                                    this.props.updateUser(this.props.user, this.state.role)}}/>\n                    }\n                    {\n                        !this.state.selected && this.props.currentUser.id != this.props.user.id &&\n                        <span>\n                            <i className=\"btn fa fa-pencil wbdv-admin-icon\"\n                                onClick={() => {\n                                    this.setState({\n                                        selected: true\n                                    })\n                                }}/>\n                            <i className=\"btn fa fa-trash wbdv-admin-icon\" onClick={() => this.props.deleteUser(this.props.user.id)}/>\n                        </span>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AdminRow;","\nconst server = \"https://comicstack.herokuapp.com/api\";\n\nconst findRecentHistory = () =>\n    fetch(server + \"/history/recent\")\n        .then(response => response.json())\n\nexport default {\n    findRecentHistory\n}","import React from 'react'\nimport ProfileCover from \"./ProfileCover\";\nimport ProfileReview from \"./ProfileReview\";\nimport {Link} from \"react-router-dom\";\nimport AdminRow from \"./AdminRow\";\nimport userService from \"../services/UserService\";\nimport reviewService from \"../services/ReviewService\";\nimport comicBookService from \"../services/ComicBookService\";\nimport historyService from \"../services/HistoryService\";\n\nclass Profile extends React.Component {\n    state = {\n        picture: \"\",\n        userHistory: [],\n        allUsers: [],\n        collection: [],\n        reviews: [],\n        level: \"\",\n        user: {},\n        password: '', first: '', last: '', email: '', dob: '',\n        address: '', city: '', state: '', zip: '', bio: ''\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n        userService.findUserById(this.props.userId)\n            .then(user => {\n                this.setState({\n                     user: user,\n                     password: user.password,\n                     first: user.first,\n                     last: user.last,\n                     email: user.email,\n                     dob: user.dob,\n                     address: user.address,\n                     city: user.city,\n                     state: user.state,\n                     zip: user.zip,\n                     bio: user.bio,\n                     picture: user.pictureURL\n                })\n            }).then(() => {\n                if (this.state.user.role == 'admin') {\n                    historyService.findRecentHistory()\n                        .then(list => {\n                            this.setState({\n                                userHistory: list\n                            })});\n                    userService.findAllUsers()\n                        .then(users => {\n                            this.setState({\n                                allUsers: users\n                            })})\n                } else {\n                    reviewService.findReviewsForUser(this.state.user.id)\n                        .then(reviews => {\n                            this.setState({\n                                reviews: reviews\n                            })});\n                }\n                comicBookService.findComicBooksForUser(this.state.user.id)\n                    .then(comicBooks => {\n                        this.setState({\n                            collection: comicBooks\n                        })}).then(() =>\n                            this.setState({\n                                level: this.calcLevel()\n                            }));\n            })\n    }\n\n    updateProfilePicture(event) {\n        this.setState({\n             picture: URL.createObjectURL(event.target.files[0])\n        })\n    }\n\n    updatePassword = (newString) =>\n        this.setState(prevState => ({\n            password: newString\n        }))\n\n    updateFirst = (newString) =>\n        this.setState(prevState => ({\n            first: newString\n        }))\n\n    updateLast = (newString) =>\n        this.setState(prevState => ({\n            last: newString\n        }))\n\n    updateEmail = (newString) =>\n        this.setState(prevState => ({\n            email: newString\n        }))\n\n    updateDOB = (newString) =>\n        this.setState(prevState => ({\n            dob: newString\n        }))\n\n    updateAddress = (newString) =>\n        this.setState(prevState => ({\n            address: newString\n        }))\n\n    updateCity = (newString) =>\n        this.setState(prevState => ({\n            city: newString\n        }))\n\n    updateState = (newString) =>\n        this.setState(prevState => ({\n            state: newString\n        }))\n\n    updateZip = (newString) =>\n        this.setState(prevState => ({\n            zip: newString\n        }))\n\n    updateBio = (newString) =>\n        this.setState(prevState => ({\n            bio: newString\n        }))\n\n    calcLevel = () =>\n        !this.state.collection? \"\":\n        this.state.collection.length < 10? \"Beginner\":\n        this.state.collection.length < 25? \"Intermediate\":\n        this.state.collection.length < 50? \"Seasoned\":\n        this.state.collection.length < 100? \"Proficient\":\n        this.state.collection.length < 200? \"Experienced\":\n        this.state.collection.length < 500? \"Advanced\":\"Expert\"\n\n    updateUser = () => {\n        userService.updateUser(this.props.userId, {\n            password: this.state.password,\n            first: this.state.first,\n            last: this.state.last,\n            email: this.state.email,\n            dob: this.state.dob,\n            address: this.state.address,\n            city: this.state.city,\n            state: this.state.state,\n            zip: this.state.zip,\n            bio: this.state.bio,\n            pictureURL: this.state.picture,\n            role: 'admin'\n        }).then(() => this.props.imageChange())}\n\n    adminUpdateUser = (user, role) =>\n        userService.updateUser(user.id, {\n            password: user.password,\n            first: user.first,\n            last: user.last,\n            email: user.email,\n            dob: user.dob,\n            address: user.address,\n            city: user.city,\n            state: user.state,\n            zip: user.zip,\n            bio: user.bio,\n            pictureURL: user.picture,\n            role: role\n        }).then(() =>\n            userService.findAllUsers()\n                .then(users => {\n                    this.setState({\n                        allUsers: users\n                    })}))\n\n    deleteUser = (userId) => {\n        userService.deleteUser(userId)\n            .then(() =>\n                userService.findAllUsers()\n                    .then(users => {\n                        this.setState({\n                            allUsers: users\n                        })}))\n    }\n\n    render() {\n        console.log(this.state.collection.length);\n        return (\n            <span>\n                <div className=\"row\">\n                    <div className=\"col-lg-7\">\n                        <div className=\"wbdv-profile-info\">\n                            <div className=\"row\">\n                                <span className=\"col-md-5 wbdv-profile-picture-surround wbdv-profile-field-labels\">\n                                    <img className=\"wbdv-profile-picture\" src={this.state.picture}/>\n                                    Profile Picture\n                                </span>\n                                <span className=\"col-md-7 wbdv-simple-info wbdv-profile-field-labels\">\n                                    <div className=\"\">\n                                        Username\n                                        <input type=\"text\"\n                                            className=\"form-control wbdv-profile-field wbdv-username\"\n                                               value={this.state.user.username}\n                                            placeholder=\"username\" readOnly/>\n                                    </div>\n                                    <div className=\"wbdv-profile-field-group\">\n                                        Password\n                                        <input type=\"text\"\n                                               className=\"form-control wbdv-profile-field\"\n                                               value={this.state.password}\n                                               onChange={(event) => this.updatePassword(\n                                                   event.target.value)}\n                                               placeholder=\"password\"/>\n                                    </div>\n                                    <div className=\"row wbdv-profile-row wbdv-profile-field-group\">\n                                        <span className=\"col-5 wbdv-profile-first-name-col\">\n                                            First\n                                            <input type=\"text\"\n                                                className=\"form-control wbdv-profile-field\"\n                                                value={this.state.first}\n                                                onChange={(event) => this.updateFirst(\n                                                    event.target.value)}\n                                                placeholder=\"first name\"/>\n                                        </span>\n                                        <span className=\"col-7 wbdv-profile-last-name-col\">\n                                            Last\n                                            <input type=\"text\"\n                                                   className=\"form-control wbdv-profile-field\"\n                                                   value={this.state.last}\n                                                   onChange={(event) => this.updateLast(\n                                                       event.target.value)}\n                                                   placeholder=\"last name\"/>\n                                        </span>\n                                    </div>\n                                    <div className=\"wbdv-profile-field-group\">\n                                        Email (recovery)\n                                        <input type=\"email\"\n                                               className=\"form-control wbdv-profile-field\"\n                                               value={this.state.email}\n                                               onChange={(event) => this.updateEmail(\n                                                   event.target.value)}\n                                               placeholder=\"email@address.com\"/>\n                                    </div>\n                                    <div className=\"wbdv-profile-field-group\">\n                                        Date of Birth\n                                        <input type=\"date\"\n                                               className=\"form-control wbdv-profile-field\"\n                                               value={this.state.dob}\n                                               onChange={(event) => this.updateDOB(\n                                                   event.target.value)}\n                                               placeholder=\"\"/>\n                                    </div>\n                                </span>\n                            </div>\n                            <span className=\"wbdv-profile-field-labels\">\n                                <div className=\"wbdv-profile-field-group\">\n                                    Address\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field\"\n                                           value={this.state.address}\n                                           onChange={(event) => this.updateAddress(\n                                               event.target.value)}\n                                           placeholder=\"1234 Main St\"/>\n                                </div>\n                            </span>\n                            <div className=\"row wbdv-profile-row wbdv-profile-field-group wbdv-profile-field-labels\">\n                                <span className=\"col-7 wbdv-profile-first-name-col\">\n                                    City\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field\"\n                                           value={this.state.city}\n                                           onChange={(event) => this.updateCity(\n                                               event.target.value)}\n                                           placeholder=\"City\"/>\n                                </span>\n                                <span className=\"col-2 wbdv-profile-last-name-col\">\n                                    State\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field\"\n                                           maxLength=\"2\"\n                                           value={this.state.state}\n                                           onChange={(event) => this.updateState(\n                                               event.target.value)}\n                                           placeholder=\"State\"/>\n                                </span>\n                                <span className=\"col-3 wbdv-profile-last-name-col\">\n                                    Zip\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field\"\n                                           maxLength=\"5\"\n                                           value={this.state.zip}\n                                           onChange={(event) => this.updateZip(\n                                               event.target.value)}\n                                           placeholder=\"Zip\"/>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-5\">\n                        <div className=\"wbdv-profile-info\">\n                            <span className=\"wbdv-profile-field-labels\">\n                                <div>\n                                    Bio (220 characters max)\n                                    <textarea\n                                           rows=\"8\"\n                                           maxlength=\"220\"\n                                           className=\"form-control wbdv-profile-field wbdv-profile-textarea\"\n                                           value={this.state.bio}\n                                           onChange={(event) => this.updateBio(\n                                               event.target.value)}\n                                           placeholder=\"I am a ...\"/>\n                                </div>\n                                <div className=\"row wbdv-profile-row wbdv-profile-field-group\">\n                                    <span className=\"col-6 wbdv-profile-left-col\">\n                                        Role\n                                        <input type=\"text\"\n                                               className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                               value={this.state.user.role} readOnly/>\n                                    </span>\n                                    <span className=\"col-6 wbdv-profile-right-col\">\n                                        Level\n                                        <input type=\"text\"\n                                               className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                               value={this.state.level} readOnly/>\n                                    </span>\n                                </div>\n                                <div className=\"row wbdv-profile-row wbdv-profile-field-group\">\n                                    <span className=\"col-6 wbdv-profile-left-col\">\n                                        Active Since\n                                        <input type=\"text\"\n                                               className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                               value={this.state.user.startDate} readOnly/>\n                                    </span>\n                                    <span className=\"col-6 wbdv-profile-right-col\">\n                                        ID Number\n                                        <input type=\"text\"\n                                               className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                               value={this.state.user.id} readOnly/>\n                                    </span>\n                                </div>\n                                <button className=\"btn wbdv-update-profile\"\n                                        onClick={() => this.updateUser()}>\n                                    Update\n                                </button>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {\n                    this.state.user.role == 'collector' &&\n                    <div className=\"row\">\n                        <div className=\"col-lg-8\">\n                            <Link to={`/collection&sortby=grade`}>\n                                <div className=\"wbdv-profile-collection overflow-hidden\">\n                                    <div className=\"wbdv-profile-collection-header\">\n                                        My Collection\n                                    </div>\n                                    {\n                                        this.state.collection.length > 0 &&\n                                        <div className=\"row row-cols-5 wbdv-cover-row\">\n                                            {this.state.collection.map(comicBook =>\n                                                                           <ProfileCover\n                                                                               comicBook={comicBook}/>)}\n                                        </div>\n                                    }\n                                    {\n                                        this.state.collection.length == 0 &&\n                                        <div className=\"wbdv-profile-empty\">\n                                            Collection is empty<br/>\n                                            <div className=\"wbdv-profile-empty-sm\">\n                                                Add comic books to your collection<br/>\n                                                using the <b> + Add </b>\n                                                 button on any issue\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-lg-4\">\n                            <Link to={`/reviews`}>\n                                <div className=\"wbdv-profile-reviews overflow-hidden\">\n                                    <div className=\"wbdv-profile-review-header\">\n                                        My Reviews\n                                    </div>\n                                    {\n                                        this.state.reviews.length > 0 &&\n                                        this.state.reviews.map(review =>\n                                             <ProfileReview review={review}/>)\n                                    }\n                                    {\n                                        this.state.reviews.length == 0 &&\n                                        <div className=\"wbdv-profile-reviews-empty\">\n                                            No reviews<br/>\n                                            <div className=\"wbdv-profile-reviews-empty-sm\">\n                                                Add a review to any issues using the <br/>\n                                                <b> + </b> button under the review section<br/>\n                                                of any issue\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                }\n                {\n                    this.state.user.role == 'admin' &&\n                    <div className=\"row\">\n                        <div className=\"col-lg-8\">\n                            <div className=\"wbdv-profile-admin-list\">\n                                <div className=\"wbdv-profile-admin-list-header\">\n                                    User Information\n                                </div>\n                                <div className=\"row wbdv-admin-row\">\n                                    <div className=\"col-3 wbdv-admin-field-group\">\n                                        Username\n                                    </div>\n                                    <div className=\"col-3 wbdv-admin-field-group\">\n                                        Password\n                                    </div>\n                                    <div className=\"col-2 wbdv-admin-field-group\">\n                                        Role\n                                    </div>\n                                    <div className=\"col-2 d-none d-md-block wbdv-admin-field-group\">\n                                        ID\n                                    </div>\n                                    <div className=\"col-2 wbdv-admin-field-group\"/>\n                                </div>\n                                <span>\n                                    {this.state.allUsers.map(user =>\n                                         <AdminRow user={user}\n                                                   currentUser={this.state.user}\n                                                   deleteUser={this.deleteUser}\n                                                   updateUser={this.adminUpdateUser}/>)}\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-4\">\n                            <div className=\"wbdv-profile-admin-history\">\n                                <div className=\"wbdv-profile-admin-history-header\">\n                                    User History\n                                </div>\n                                <div className=\"wbdv-profile-admin-history-text\" align=\"left\">\n                                    <p className=\"wbdv-admin-history-p\">\n                                        {this.state.userHistory.map(row =>\n                                            <span>\n                                                {row.userId ? \"user \" : \"\"}\n                                                <Link to={`/user/${row.userId}`}>{row.userId ? row.userId : \"\"}</Link>\n                                                {row.userId ? \" -- \" : \"\"}\n                                                {row.action}\n                                                {row.issueId ? \" -- issue \" : \"\"}\n                                                <Link to={`/details/issue/${row.issueId}`}>{row.issueId ? row.issueId : \"\"}</Link>\n                                            <br/></span>)}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </span>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass CollectionCover extends React.Component {\n    state = {\n        hover: false\n    }\n\n    render() {\n        return (\n            <div className=\"col wbdv-collection-col\"\n                 onMouseEnter={() => this.setState({\n                      hover: true\n                 })}\n                 onMouseLeave={() => this.setState({\n                      hover: false\n                 })}>\n                <div className=\"wbdv-grade-box\">\n                    {this.props.comicBook.grade.toFixed(1)}\n                </div>\n                {\n                    this.state.hover &&\n                    <div className=\"btn wbdv-delete-box\"\n                         onClick={() => this.props.deleteComicBook(this.props.comicBook.id)}>\n                        <i className=\"fa fa-trash\"/>\n                    </div>\n                }\n                <Link to={`/details/issue/${this.props.comicBook.issueId}`}>\n                    <img className=\"wbdv-collection-cover\" src={this.props.comicBook.coverImageURL}\n                         alt=\"Temporary\"/>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default CollectionCover;","import React from 'react'\nimport CollectionCover from \"./CollectionCover\";\nimport {Link} from \"react-router-dom\";\nimport comicBookService from \"../services/ComicBookService\";\n\nclass Collection extends React.Component {\n    state = {\n        searchString: '',\n        sortBy: this.props.match.params.sortBy,\n        searchBy: 'title',\n        collection: [],\n        searching: false\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n        comicBookService.findComicBooksForUserSorted(this.props.userId, this.state.sortBy)\n            .then(list => {\n                this.setState({\n                    collection: list\n                })})\n    }\n\n    updateSearchString = (newString) =>\n        this.setState(prevState => ({\n            searchString: newString\n        }))\n\n    updateSortBy = (value) => {\n        this.setState(prevState => ({\n            sortBy: value,\n            searching: false\n        }));\n        comicBookService.findComicBooksForUserSorted(this.props.userId, value)\n            .then(list => {\n                this.setState({\n                    collection: list\n                })}).then(() => this.props.history.push(`/collection&sortby=${this.state.sortBy}`));\n    }\n\n    updateSearchBy = (value) =>\n        this.setState(prevState => ({\n            searchBy: value\n        }))\n\n    deleteComicBook = (comicBookId) => {\n        comicBookService.deleteComicBook(comicBookId)\n            .then(() => comicBookService.findComicBooksForUserSorted(this.props.userId, this.state.sortBy)\n                .then(list => {\n                    this.setState({\n                        collection: list\n                    })}).then(() => this.props.history.push(`/collection&sortby=${this.state.sortBy}`)))\n    }\n\n    search = () =>\n        comicBookService.findComicBooksForUserSortedSearch(this.props.userId, this.state.sortBy, this.state.searchBy, this.state.searchString)\n            .then(list => {\n                this.setState({\n                    collection: list,\n                    searching: true\n                })})\n\n    render() {\n        return (\n            <div className=\"wbdv-collection\">\n                <div className=\"wbdv-collection-header\">\n                    My Collection\n                </div>\n                <div className=\"row wbdv-collection-search-row\">\n                    <span className=\"col-md-1\"/>\n                    <span className=\"col-md-10\">\n                        <div className=\"row wbdv-collection-search-labels\">\n                            <span className=\"col-6 col-lg-2\">\n                                Sort By\n                            </span>\n                            <span className=\"col-6 col-lg-2\">\n                                Search By\n                            </span>\n                        </div>\n                        <div className=\"row\">\n                            <span className=\"col-6 col-lg-2 wbdv-collection-search-col\">\n                                <select\n                                    className=\"custom-select wbdv-collection-dropdown\"\n                                    value={this.state.sortBy}\n                                    onChange={(event) => this.updateSortBy(\n                                        event.target.value)}>\n                                    <option value=\"grade\">Grade</option>\n                                    <option value=\"coverdate\">Cover Date</option>\n                                    <option value=\"timestamp\">Date Added</option>\n                                    <option value=\"title\">Title</option>\n                                    <option value=\"volume\">Volume</option>\n                                </select>\n                            </span>\n                            <span className=\"col-6 col-lg-2 wbdv-collection-search-col\">\n                                <select\n                                    className=\"custom-select wbdv-collection-dropdown\"\n                                    value={this.state.searchBy}\n                                    onChange={(event) => this.updateSearchBy(\n                                        event.target.value)}>\n                                    <option value=\"title\">Title</option>\n                                    <option value=\"volume\">Volume</option>\n                                    <option value=\"character\">Character</option>\n                                </select>\n                            </span>\n                            <span className=\"col-md-8 wbdv-collection-search-col\">\n                                <div className=\"input-group wbdv-collection-search-group\">\n                                    <input type=\"text\" className=\"form-control wbdv-search-bar\"\n                                           placeholder=\"Search Collection\"\n                                           onChange={(event) => this.updateSearchString(\n                                               event.target.value)}\n                                           onKeyPress={(event) => event.key == 'Enter' ? this.search() : 0}\n                                           value={this.state.searchString}/>\n                                    <div className=\"input-group-append\">\n                                        <Link onClick={() => this.search()}>\n                                            <span\n                                                className=\"btn input-group-text wbdv-search-button\"\n                                                id=\"basic-addon1\">\n                                                <i className=\"fa fa-search fa-lg wbdv-search-icon\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </span>\n                        </div>\n                    </span>\n                    <span className=\"col-md-1\"/>\n                </div>\n                {\n                    this.state.collection.length > 0 &&\n                    <div className=\"row row-cols-3 row-cols-md-5 row-cols-lg-6 wbdv-cover-row\">\n                        {this.state.collection.map(comicBook =>\n                             <CollectionCover comicBook={comicBook}\n                                  deleteComicBook={this.deleteComicBook}/>)}\n                    </div>\n                }\n                {\n                    this.state.collection.length == 0 && !this.state.searching &&\n                    <div className=\"wbdv-collection-empty\">\n                        Collection is empty<br/>\n                        <div className=\"wbdv-collection-empty-sm\">\n                            Add comic books to your collection<br/>\n                            using the <b> + Add </b>\n                            button on any issue\n                        </div>\n                    </div>\n                }\n                {\n                    this.state.collection.length == 0 && this.state.searching &&\n                    <div className=\"wbdv-no-search-results\">\n                        No results match your search criteria\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Collection;","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass Review extends React.Component {\n    render() {\n        let elements=[];\n        for (let i = 0; i < 5; i++) {\n            i < this.props.review.stars?\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-filled\"/>):\n            elements.push(<i className=\"fa fa-star wbdv-review-star wbdv-review-star-blank\"/>);\n        }\n        return (\n            <div className=\"col-md-6\">\n                <Link to={`/details/issue/${this.props.review.issueId}`}>\n                    <li className=\"list-group-item wbdv-review\">\n                        <span className=\"row wbdv-review-row\">\n                            <div className=\"col-3 wbdv-covered-review-cover-col\">\n                                <img className=\"btn wbdv-regular-review-cover\" src={this.props.review.coverImageURL}\n                                     alt=\"Card image cap\"/>\n                            </div>\n                            <div className=\"col-9 wbdv-covered-review-text-col\">\n                            <div className=\"row wbdv-review-row\">\n                                <div className=\"col-5\"/>\n                                <div className=\"col-7 wbdv-review-top-col\">\n                                    <span className=\"float-right\">\n                                        {elements}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"wbdv-regular-review-message\"\n                                title={this.props.review.text}>\n                                {this.props.review.text}\n                            </div>\n                            </div>\n                        </span>\n                    </li>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Review;","import React from 'react'\nimport Review from \"./Review\";\nimport reviewService from \"../services/ReviewService\";\n\nclass Reviews extends React.Component {\n    state = {\n        reviews: []\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n        reviewService.findReviewsForUser(this.props.userId)\n            .then(reviews => {\n                this.setState({\n                    reviews: reviews\n                })})\n    }\n\n    render() {\n        return (\n            <div className=\"wbdv-reviews\">\n                <div className=\"wbdv-reviews-header\">\n                    My Reviews\n                </div>\n                {\n                    this.state.reviews.length > 0 &&\n                    <span className=\"row\">\n                        {\n                            this.state.reviews.map(review => <Review review={review}/>)\n                        }\n                    </span>\n                }\n                {\n                    this.state.reviews.length == 0 &&\n                    <div className=\"wbdv-collection-empty\">\n                        No reviews<br/>\n                        <div className=\"wbdv-collection-empty-sm\">\n                            Add a review to any issue using the <br/>\n                            <b> + </b> button under the review section<br/>\n                            of any issue\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Reviews;","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass CharacterRelatedCover extends React.Component {\n    render() {\n        return (\n            <div className=\"col wbdv-character-related-cover-col\">\n                <Link to={`/details/issue/${this.props.issue.id}`}>\n                    <img className=\"wbdv-character-related-cover\" src={this.props.issue.image.super_url}\n                         alt=\"Card image cap\"/>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default CharacterRelatedCover;","import React, {Fragment} from 'react'\nimport SearchService from \"../services/SearchService\";\nimport parse, { domToReact } from 'html-react-parser';\nimport CharacterRelatedCover from \"./CharacterRelatedCover\";\nimport {Link} from \"react-router-dom\";\nimport DetailsLoadingIndicator from \"./DetailsLoading\";\n\nclass Character extends React.Component {\n    state = {\n        character: null,\n        related: [],\n        loaded: false\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.match.params.id !== this.props.match.params.id) {\n            window.scrollTo({top: 0, behavior: \"smooth\"});\n            this.setState({\n                loaded: false\n            });\n            this.reload();\n        }\n    }\n\n    reload = () =>\n        SearchService.findCharacterById(this.props.match.params.id)\n            .then(issue => issue.results)\n            .then(character => {\n                this.setState({\n                                  character: character\n                              });\n                SearchService.characterRelated(character.name)\n                    .then(issues => {\n                        this.setState({\n                                          related: issues.results,\n                                          loaded: true\n                                      })})})\n\n    displayList = (character, i) => {\n        return (\n            <span>\n                <Link to={`/details/character/${character.id}`} className={\"wbdv-character-link\"}>\n                    {character.name}\n                </Link>\n                {(i < this.state.character.character_enemies.length - 1) ?\n                \", \" : \"\"}\n            </span>\n        )\n    }\n\n    displayListTooltip = (character, i) => {\n        return \" \" + character.name;\n    }\n\n    render() {\n        if(!this.state.character || !this.state.loaded) {\n            return (\n                <div className=\"row\">\n                    <DetailsLoadingIndicator/>\n                </div>\n            )\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-lg-8\">\n                    <div className=\"wbdv-issue-info\">\n                        <span className=\"row\">\n                            <div className=\"col-lg-5\">\n                                <img className=\"wbdv-issue-cover\"\n                                     src={this.state.character.image.super_url}\n                                     alt=\"Card image cap\"/>\n                            </div>\n                            <span className=\"col-lg-7 wbdv-basic-top-outer\">\n                                <div className=\"wbdv-character-top-info\">\n                                    <div className=\"row wbdv-character-info-row\">\n                                        <div\n                                            className=\"col-3 wbdv-info-row-column font-weight-bold\">\n                                            Name:\n                                        </div>\n                                        <div\n                                            className=\"col-9 wbdv-info-row-column text-right text-truncate\">\n                                            {this.state.character.name}\n                                        </div>\n                                    </div>\n                                    <div className=\"row wbdv-character-info-row\">\n                                        <div\n                                            className=\"col-6 wbdv-info-row-column font-weight-bold\">\n                                            Real Name:\n                                        </div>\n                                        <div\n                                            className=\"col-6 wbdv-info-row-column text-right text-truncate\"\n                                            title={this.state.character.real_name ?\n                                                  this.state.character.real_name :\n                                                  \"N/A\"}>\n                                            {this.state.character.real_name ?\n                                             this.state.character.real_name :\n                                             \"N/A\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"row wbdv-character-info-row\">\n                                        <div\n                                            className=\"col-8 wbdv-info-row-column font-weight-bold\">\n                                            Birth Date:\n                                        </div>\n                                        <div\n                                            className=\"col-4 wbdv-info-row-column text-right text-truncate\">\n                                            {this.state.character.birth ?\n                                             this.state.character.birth :\n                                             \"N/A\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"row wbdv-character-info-row\">\n                                        <div\n                                            className=\"col-4 wbdv-info-row-column font-weight-bold\">\n                                            Publisher:\n                                        </div>\n                                        <div\n                                            className=\"col-8 wbdv-info-row-column text-right text-truncate\">\n                                            {this.state.character.publisher.name}\n                                        </div>\n                                    </div>\n                                    <div className=\"row wbdv-character-info-row\">\n                                        <div\n                                            className=\"col-6 wbdv-info-row-column font-weight-bold\">\n                                            First Issue:\n                                        </div>\n                                        <div\n                                            className=\"col-6 wbdv-info-row-column text-right text-truncate wbdv-character-link\"\n                                            title={this.state.character.first_appeared_in_issue.name\n                                                   ?\n                                                   this.state.character.first_appeared_in_issue.name\n                                                   :\n                                                   \"N/A\"}>\n                                            {\n                                                this.state.character.first_appeared_in_issue.name ?\n                                                <Link\n                                                    to={`/details/issue/${this.state.character.first_appeared_in_issue.id}`}\n                                                    className={\"wbdv-character-link\"}>\n                                                    {this.state.character.first_appeared_in_issue.name}\n                                                </Link> :\n                                                <span className=\"wbdv-no-link\">\n                                                    N/A\n                                                </span>\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className=\"row wbdv-character-info-row\">\n                                        <div\n                                            className=\"col-6 wbdv-info-row-column font-weight-bold\">\n                                            Appearances:\n                                        </div>\n                                        <div\n                                            className=\"col-6 wbdv-info-row-column text-right text-truncate\">\n                                            {this.state.character.count_of_issue_appearances}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"wbdv-top-spacer\"/>\n                                <div className=\"wbdv-character-top-chars\"\n                                     title={this.state.character.character_enemies.map(\n                                         this.displayListTooltip)}>\n                                    <div\n                                        className=\"font-weight-bold wbdv-section-title\">Enemies</div>\n                                    {this.state.character.character_enemies.map(this.displayList)}\n                                </div>\n                            </span>\n                        </span>\n                        <div className=\"wbdv-issue-description\">\n                            <div\n                                className=\"font-weight-bold wbdv-section-title\">Description\n                            </div>\n                            {this.state.character.description ?\n                             parse(this.state.character.description, {\n                                 replace: ({attribs, children}) => {\n                                     if (!attribs) {\n                                         return;\n                                     }\n                                     if (attribs.href) {\n                                         return React.createElement('a', {},\n                                                                    domToReact(children,))\n                                     }\n                                 }\n                             }) :\n                             \"N/A\"}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-4\">\n                    <div className=\"wbdv-issue-reviews\">\n                        <div className=\"wbdv-character-related\">\n                            Related Issues\n                        </div>\n                        <div className=\"row row-cols-3 row-cols-lg-2 wbdv-cover-row\">\n                            {\n                                this.state.related.map(issue =>\n                                                           <CharacterRelatedCover\n                                                               id={issue.id}\n                                                               issue={issue}/>)\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Character","import React from 'react'\nimport ProfileCover from \"./ProfileCover\";\nimport ProfileReview from \"./ProfileReview\";\nimport userService from \"../services/UserService\";\nimport reviewService from \"../services/ReviewService\";\nimport comicBookService from \"../services/ComicBookService\";\n\nclass PublicProfile extends React.Component {\n    state = {\n        user: {},\n        collection: [],\n        reviews: [],\n        loaded: false\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"});\n        userService.findUserById(this.props.match.params.id)\n            .then(user => {\n                this.setState({\n                     user: user\n                })\n            });\n        reviewService.findReviewsForUser(this.props.match.params.id)\n            .then(reviews => {\n                this.setState({\n                    reviews: reviews,\n                    loaded: true\n                })});\n        comicBookService.findComicBooksForUser(this.props.match.params.id)\n            .then(comicBooks => {\n                this.setState({\n                    collection: comicBooks\n                })});\n    }\n\n    calcLevel = () =>\n        !this.state.collection? \"\":\n        this.state.collection.length < 10? \"Beginner\":\n        this.state.collection.length < 25? \"Intermediate\":\n        this.state.collection.length < 50? \"Seasoned\":\n        this.state.collection.length < 100? \"Proficient\":\n        this.state.collection.length < 200? \"Experienced\":\n        this.state.collection.length < 500? \"Advanced\":\"Expert\"\n\n    render() {\n        return (\n            <span>\n            {\n                !this.state.user.id && this.state.loaded &&\n                <div className=\"wbdv-user-null\">\n                    <div>\n                        User does not exist\n                    </div>\n                </div>\n            }\n            {\n                this.state.user.id &&\n                <span>\n                    <div className=\"row wbdv-public-profile wbdv-profile-field-labels\">\n                        <span className=\"col-lg-2 wbdv-public-profile-col\">\n                            <img className=\"wbdv-public-profile-picture\"\n                                 src={this.state.user.pictureURL}\n                                 alt=\"Card image cap\"/>\n                        </span>\n                        <span\n                            className=\"col-lg-5 wbdv-public-profile-col wbdv-profile-field-labels\">\n                            <div className=\"\">\n                                Username\n                                <input type=\"text\"\n                                       className=\"form-control wbdv-profile-field wbdv-username\"\n                                       value={this.state.user.username}\n                                       placeholder=\"username\" readOnly/>\n                            </div>\n                            <div className=\"row wbdv-public-profile-row wbdv-profile-field-group\">\n                                <span className=\"col-6 wbdv-profile-left-col\">\n                                    Role\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                           value={this.state.user.role} readOnly/>\n                                </span>\n                                <span className=\"col-6 wbdv-profile-right-col\">\n                                    Level\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                           value={this.calcLevel()} readOnly/>\n                                </span>\n                            </div>\n                            <div className=\"row wbdv-public-profile-row wbdv-profile-field-group\">\n                                <span className=\"col-6 wbdv-profile-left-col\">\n                                    Active Since\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                           value={this.state.user.startDate} readOnly/>\n                                </span>\n                                <span className=\"col-6 wbdv-profile-right-col\">\n                                    ID Number\n                                    <input type=\"text\"\n                                           className=\"form-control wbdv-profile-field wbdv-added-info\"\n                                           value={this.state.user.id} readOnly/>\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"col-lg-5 wbdv-public-profile-col\">\n                            <div>\n                                Bio\n                                <textarea\n                                    rows=\"6\"\n                                    maxlength=\"220\"\n                                    className=\"form-control wbdv-profile-field wbdv-profile-textarea\"\n                                    placeholder=\"I am a ...\"\n                                    value={this.state.user.bio}\n                                    readOnly/>\n                            </div>\n                        </span>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-8\">\n                                <div className=\"wbdv-profile-collection overflow-hidden\">\n                                    <div className=\"wbdv-profile-collection-header\">\n                                        {this.state.user.username}'s Collection\n                                    </div>\n                                    <div className=\"row row-cols-5 wbdv-cover-row\">\n                                        {this.state.collection.map(comicBook =>\n                                                                       <ProfileCover\n                                                                           comicBook={comicBook}/>)}\n                                    </div>\n                                </div>\n                        </div>\n                        <div className=\"col-lg-4\">\n                                <div className=\"wbdv-profile-reviews overflow-hidden\">\n                                    <div className=\"wbdv-profile-review-header\">\n                                        {this.state.user.username}'s Reviews\n                                    </div>\n                                    {\n                                        this.state.reviews.map(review =>\n                                                                   <ProfileReview review={review}/>)\n                                    }\n                                </div>\n                        </div>\n                    </div>\n                </span>\n            }\n            </span>\n        )\n    }\n}\n\nexport default PublicProfile;","import React from 'react'\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport SearchResults from \"./SearchResults\";\nimport Issue from \"./Issue\"\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Profile from \"./Profile\";\nimport Collection from \"./Collection\";\nimport Reviews from \"./Reviews\";\nimport Character from \"./Character\";\nimport PublicProfile from \"./PublicProfile\";\n\nclass ComicStack extends React.Component {\n    state = {\n        userId: null,\n        imageChange: false\n    }\n\n    loginUser = (userId) => {\n        console.log(userId);\n        this.setState(prevState => ({\n            userId: userId\n        }));\n        return userId}\n\n    logoutUser = () =>\n        this.setState(prevState => ({\n            userId: null\n        }))\n\n    imageChange = () =>\n        this.setState(prevState => ({\n            imageChange: !this.state.imageChange\n        }))\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Header logoutUser={this.logoutUser} userId={this.state.userId} imageChange={this.state.imageChange}/>\n                <div className=\"container\">\n                    <Route path=\"/\" exact={true} render={(props) =>\n                        <Home {...props} loginUser={this.loginUser} logoutUser={this.logoutUser} userId={this.state.userId}/>}/>\n                    <Route path=\"/search/:query\" exact={true} component={SearchResults}/>\n                    <Route path=\"/details/issue/:id\" exact={true} render={(props) =>\n                        <Issue {...props} userId={this.state.userId} />}/>\n                    <Route path=\"/details/character/:id\" exact={true} component={Character}/>\n                    <Route path=\"/login\" exact={true} render={(props) =>\n                        <Login {...props} loginUser={this.loginUser} />}/>\n                    <Route path=\"/register\" exact={true} render={(props) =>\n                        <Register {...props} loginUser={this.loginUser} />}/>\n                    <Route path=\"/profile\" exact={true} render={(props) =>\n                        <Profile {...props} userId={this.state.userId} imageChange={this.imageChange}/>}/>\n                    <Route path=\"/user/:id\" exact={true} component={PublicProfile}/>\n                    <Route path={[\"/collection&sortby=:sortBy\"]} exact={true} render={(props) =>\n                        <Collection {...props} userId={this.state.userId} />}/>\n                    <Route path=\"/reviews\" exact={true} render={(props) =>\n                        <Reviews {...props} userId={this.state.userId}/>}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default ComicStack","import React from 'react';\nimport './App.css';\nimport ComicStack from \"./components/ComicStack\";\n\nfunction App() {\n  return (\n      <ComicStack/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}